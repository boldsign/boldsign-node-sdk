/**
 * BoldSign API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class EmbeddedTemplateEditRequest {
    'redirectUrl'?: string | null;
    'showToolbar'?: boolean = false;
    'viewOption'?: EmbeddedTemplateEditRequest.ViewOptionEnum = EmbeddedTemplateEditRequest.ViewOptionEnum.PreparePage;
    'showSaveButton'?: boolean = true;
    'locale'?: EmbeddedTemplateEditRequest.LocaleEnum = EmbeddedTemplateEditRequest.LocaleEnum.En;
    'showCreateButton'?: boolean = true;
    'showPreviewButton'?: boolean = true;
    'showNavigationButtons'?: boolean = true;
    'linkValidTill'?: Date | null;
    'showTooltip'?: boolean = false;
    'onBehalfOf'?: string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "redirectUrl",
            "baseName": "redirectUrl",
            "type": "string"
        },
        {
            "name": "showToolbar",
            "baseName": "showToolbar",
            "type": "boolean"
        },
        {
            "name": "viewOption",
            "baseName": "viewOption",
            "type": "EmbeddedTemplateEditRequest.ViewOptionEnum"
        },
        {
            "name": "showSaveButton",
            "baseName": "showSaveButton",
            "type": "boolean"
        },
        {
            "name": "locale",
            "baseName": "locale",
            "type": "EmbeddedTemplateEditRequest.LocaleEnum"
        },
        {
            "name": "showCreateButton",
            "baseName": "showCreateButton",
            "type": "boolean"
        },
        {
            "name": "showPreviewButton",
            "baseName": "showPreviewButton",
            "type": "boolean"
        },
        {
            "name": "showNavigationButtons",
            "baseName": "showNavigationButtons",
            "type": "boolean"
        },
        {
            "name": "linkValidTill",
            "baseName": "linkValidTill",
            "type": "Date"
        },
        {
            "name": "showTooltip",
            "baseName": "showTooltip",
            "type": "boolean"
        },
        {
            "name": "onBehalfOf",
            "baseName": "onBehalfOf",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return EmbeddedTemplateEditRequest.attributeTypeMap;
    }
}

export namespace EmbeddedTemplateEditRequest {
    export enum ViewOptionEnum {
        PreparePage = <any> 'PreparePage',
        FillingPage = <any> 'FillingPage'
    }
    export enum LocaleEnum {
        En = <any> 'EN',
        No = <any> 'NO',
        Fr = <any> 'FR',
        De = <any> 'DE',
        Es = <any> 'ES',
        Bg = <any> 'BG',
        Cs = <any> 'CS',
        Da = <any> 'DA',
        It = <any> 'IT',
        Nl = <any> 'NL',
        Pl = <any> 'PL',
        Pt = <any> 'PT',
        Ro = <any> 'RO',
        Ru = <any> 'RU',
        Sv = <any> 'SV',
        Default = <any> 'Default'
    }
}
